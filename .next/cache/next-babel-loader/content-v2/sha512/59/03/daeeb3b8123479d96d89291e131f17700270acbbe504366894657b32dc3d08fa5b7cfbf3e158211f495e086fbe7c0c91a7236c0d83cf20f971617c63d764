{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jura\\\\WebstormProjects\\\\gc_test\\\\pages\\\\index.js\";\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport socket from \"socket.io-client\";\nconst playerIds = [1, 2];\n\nconst fetchPlayerData = async playerId => {\n  const playerDataResp = await fetch(`/api/players/${playerId}`);\n  const playerData = await playerDataResp.json();\n  return playerData;\n};\n\nexport default function IndexPage({}) {\n  const {\n    0: playerId,\n    1: setPlayerId\n  } = useState(1);\n  const {\n    0: playerData,\n    1: setPlayerData\n  } = useState({});\n  const io = socket('', {\n    path: '/socket.io',\n    transports: ['websocket'],\n    secure: true\n  });\n  io.on('message', playerData => {\n    console.log('got message');\n    console.log('playerData\\n', playerData);\n    setPlayerData(playerData);\n  });\n\n  const runSpin = async () => {\n    const playerDataResp = await fetch(`/api/spin/?playerId=${playerId}`);\n    const spinResult = await playerDataResp.json();\n    console.log('spinResult\\n', spinResult);\n  };\n\n  useEffect(async () => {\n    const playerData = await fetchPlayerData(playerId);\n    setPlayerData(playerData);\n  }, [playerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onClick: e => {\n        console.log('e.target.value\\n', e.target.value);\n        setPlayerId(e.target.value);\n      },\n      children: playerIds.map(id => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: [\" \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Player data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name: \", playerData.name]\n      }, playerData.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Balance: \", playerData.balance]\n      }, playerData.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runSpin,\n      children: \"SPIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Spins history:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Jura/WebstormProjects/gc_test/pages/index.js"],"names":["React","useEffect","useState","socket","playerIds","fetchPlayerData","playerId","playerDataResp","fetch","playerData","json","IndexPage","setPlayerId","setPlayerData","io","path","transports","secure","on","console","log","runSpin","spinResult","e","target","value","map","id","name","balance"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,SAAS,GAAG,CAChB,CADgB,EACb,CADa,CAAlB;;AAIA,MAAMC,eAAe,GAAG,MAAOC,QAAP,IAAoB;AAE1C,QAAMC,cAAc,GAAG,MAAMC,KAAK,CAAE,gBAAeF,QAAS,EAA1B,CAAlC;AACA,QAAMG,UAAU,GAAG,MAAMF,cAAc,CAACG,IAAf,EAAzB;AAEA,SAAOD,UAAP;AAED,CAPD;;AASA,eAAgB,SAAUE,SAAV,CAAoB,EAApB,EAAwB;AACtC,QAAM;AAAA,OAACL,QAAD;AAAA,OAAWM;AAAX,MAA0BV,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaI;AAAb,MAA8BX,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMY,EAAE,GAAGX,MAAM,CAAC,EAAD,EAAK;AACpBY,IAAAA,IAAI,EAAE,YADc;AAEpBC,IAAAA,UAAU,EAAE,CAAC,WAAD,CAFQ;AAGpBC,IAAAA,MAAM,EAAE;AAHY,GAAL,CAAjB;AAMAH,EAAAA,EAAE,CAACI,EAAH,CAAM,SAAN,EAAkBT,UAAD,IAAgB;AAC/BU,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BX,UAA5B;AACAI,IAAAA,aAAa,CAACJ,UAAD,CAAb;AACD,GAJD;;AAMA,QAAMY,OAAO,GAAG,YAAY;AAC1B,UAAMd,cAAc,GAAG,MAAMC,KAAK,CAAE,uBAAsBF,QAAS,EAAjC,CAAlC;AACA,UAAMgB,UAAU,GAAG,MAAMf,cAAc,CAACG,IAAf,EAAzB;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,UAA5B;AACD,GALD;;AAQArB,EAAAA,SAAS,CAAC,YAAW;AACnB,UAAMQ,UAAU,GAAG,MAAMJ,eAAe,CAACC,QAAD,CAAxC;AACAO,IAAAA,aAAa,CAACJ,UAAD,CAAb;AAED,GAJQ,EAIN,CAACH,QAAD,CAJM,CAAT;AAMA,sBAAQ;AAAA,4BACN;AAAQ,MAAA,OAAO,EAAGiB,CAAC,IAAI;AACrBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCG,CAAC,CAACC,MAAF,CAASC,KAAzC;AAEAb,QAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,OAJD;AAAA,gBAKGrB,SAAS,CAACsB,GAAV,CAAcC,EAAE,IAAI;AACnB,4BAAO;AAAA,0BAAUA,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AALH;AAAA;AAAA;AAAA;AAAA,YADM,eAWN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXM,eAYN;AAAA,8BACE;AAAA,6BAA+BlB,UAAU,CAACmB,IAA1C;AAAA,SAASnB,UAAU,CAACkB,EAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCAAkClB,UAAU,CAACoB,OAA7C;AAAA,SAASpB,UAAU,CAACkB,EAApB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZM,eAiBN;AAAQ,MAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBM,eAkBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAqBD","sourcesContent":["import React from 'react'\r\nimport {useEffect, useState} from \"react\";\r\nimport socket from \"socket.io-client\";\r\n\r\nconst playerIds = [\r\n  1, 2\r\n];\r\n\r\nconst fetchPlayerData = async (playerId) => {\r\n\r\n  const playerDataResp = await fetch(`/api/players/${playerId}`)\r\n  const playerData = await playerDataResp.json();\r\n\r\n  return playerData;\r\n\r\n}\r\n\r\nexport default  function  IndexPage({}) {\r\n  const [playerId, setPlayerId] = useState(1);\r\n  const [playerData, setPlayerData] = useState({});\r\n\r\n  const io = socket('', {\r\n    path: '/socket.io',\r\n    transports: ['websocket'],\r\n    secure: true,\r\n  });\r\n\r\n  io.on('message', (playerData) => {\r\n    console.log('got message');\r\n    console.log('playerData\\n', playerData);\r\n    setPlayerData(playerData);\r\n  })\r\n\r\n  const runSpin = async () => {\r\n    const playerDataResp = await fetch(`/api/spin/?playerId=${playerId}`)\r\n    const spinResult = await playerDataResp.json();\r\n\r\n    console.log('spinResult\\n', spinResult);\r\n  }\r\n\r\n\r\n  useEffect(async() => {\r\n    const playerData = await fetchPlayerData(playerId);\r\n    setPlayerData(playerData);\r\n\r\n  }, [playerId]);\r\n\r\n  return (<div>\r\n    <select onClick={(e => {\r\n      console.log('e.target.value\\n', e.target.value);\r\n\r\n      setPlayerId(e.target.value)\r\n    })} >\r\n      {playerIds.map(id => {\r\n        return <option> {id}</option>\r\n      })}\r\n    </select>\r\n\r\n    <p>Player data:</p>\r\n    <ul>\r\n      <li key={playerData.id}>Name: {playerData.name}</li>\r\n      <li key={playerData.id}>Balance: {playerData.balance}</li>\r\n    </ul>\r\n\r\n    <button onClick={runSpin}>SPIN</button>\r\n    <p>Spins history:</p>\r\n\r\n  </div>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}