{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectDestructuringEmpty from \"C:/Users/Jura/WebstormProjects/gc_test/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _regeneratorRuntime from \"C:/Users/Jura/WebstormProjects/gc_test/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Jura/WebstormProjects/gc_test/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jura\\\\WebstormProjects\\\\gc_test\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport socket from \"socket.io-client\";\nvar playerIds = [1, 2];\n\nvar fetchPlayerData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(playerId) {\n    var playerDataResp, playerData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/api/players/\".concat(playerId));\n\n          case 2:\n            playerDataResp = _context.sent;\n            _context.next = 5;\n            return playerDataResp.json();\n\n          case 5:\n            playerData = _context.sent;\n            return _context.abrupt(\"return\", playerData);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchPlayerData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default function IndexPage(_ref2) {\n  _s();\n\n  var _this = this;\n\n  _objectDestructuringEmpty(_ref2);\n\n  var _useState = useState(1),\n      playerId = _useState[0],\n      setPlayerId = _useState[1];\n\n  var _useState2 = useState({}),\n      playerData = _useState2[0],\n      setPlayerData = _useState2[1];\n\n  console.log('playerId\\n', playerId);\n  useEffect(function () {\n    var io = socket('', {\n      path: '/socket.io',\n      transports: ['websocket'],\n      secure: true\n    });\n    io.on('message', function (playerUpdateData) {\n      console.log('playerData\\n', playerData);\n      console.log('playerUpdateData\\n', playerUpdateData);\n\n      if (playerData.id == playerId) {\n        setPlayerData(playerData);\n      }\n    });\n  }, []);\n\n  var runSpin = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var playerDataResp;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"/api/spin/?playerId=\".concat(playerId));\n\n            case 2:\n              playerDataResp = _context2.sent;\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function runSpin() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var playerData;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetchPlayerData(playerId);\n\n          case 2:\n            playerData = _context3.sent;\n            console.log('playerData\\n', playerData);\n            setPlayerData(playerData);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })), [playerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onClick: function onClick(e) {\n        setPlayerId(e.target.value);\n      },\n      children: playerIds.map(function (id) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: [\" \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Player data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name: \", playerData.name]\n      }, playerData.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Balance: \", playerData.balance]\n      }, playerData.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runSpin,\n      children: \"SPIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Spins history:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 11\n  }, this);\n}\n\n_s(IndexPage, \"ciWPbXJDDbpliq9ZeFWwW3xVlC8=\");\n\n_c = IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["C:/Users/Jura/WebstormProjects/gc_test/pages/index.js"],"names":["React","useEffect","useState","socket","playerIds","fetchPlayerData","playerId","fetch","playerDataResp","json","playerData","IndexPage","setPlayerId","setPlayerData","console","log","io","path","transports","secure","on","playerUpdateData","id","runSpin","e","target","value","map","name","balance"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {useEffect, useState} from \"react\";\r\nimport socket from \"socket.io-client\";\r\n\r\nconst playerIds = [\r\n  1, 2\r\n];\r\n\r\nconst fetchPlayerData = async (playerId) => {\r\n\r\n  const playerDataResp = await fetch(`/api/players/${playerId}`)\r\n  const playerData = await playerDataResp.json();\r\n\r\n  return playerData;\r\n\r\n}\r\n\r\nexport default function IndexPage({}) {\r\n  const [playerId, setPlayerId] = useState(1);\r\n  const [playerData, setPlayerData] = useState({});\r\n\r\n  console.log('playerId\\n', playerId);\r\n\r\n  useEffect(() => {\r\n    const io = socket('', {\r\n      path: '/socket.io',\r\n      transports: ['websocket'],\r\n      secure: true,\r\n    });\r\n\r\n    io.on('message', (playerUpdateData) => {\r\n      console.log('playerData\\n', playerData);\r\n      console.log('playerUpdateData\\n', playerUpdateData);\r\n\r\n      if (playerData.id == playerId) {\r\n        setPlayerData(playerData);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const runSpin = async () => {\r\n    const playerDataResp = await fetch(`/api/spin/?playerId=${playerId}`)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    const playerData = await fetchPlayerData(playerId);\r\n    console.log('playerData\\n', playerData);\r\n    setPlayerData(playerData);\r\n\r\n  }, [playerId]);\r\n\r\n  return (<div>\r\n    <select onClick={(e => {\r\n      setPlayerId(e.target.value)\r\n    })}>\r\n      {playerIds.map(id => {\r\n        return <option> {id}</option>\r\n      })}\r\n    </select>\r\n\r\n    <p>Player data:</p>\r\n    <ul>\r\n      <li key={playerData.id}>Name: {playerData.name}</li>\r\n      <li key={playerData.id}>Balance: {playerData.balance}</li>\r\n    </ul>\r\n\r\n    <button onClick={runSpin}>SPIN</button>\r\n    <p>Spins history:</p>\r\n\r\n  </div>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}